// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/rust
{
    "name": "Rust",
    // Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
    "dockerComposeFile": "../docker-compose.yml",
    "service": "app",
    "workspaceFolder": "/workspace",
    // Use 'mounts' to make the cargo cache persistent in a Docker Volume.
    // "workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
    // "mounts": [
    //     "source=${localEnv:HOME}/src/OTech/otech.py,target=/workspaces/otech.py,type=bind,consistency=cached",
    //     "source=/Volumes/Vault/edepot.db,target=/workspaces/${localWorkspaceFolderBasename}/edepot.db,type=bind,consistency=cached",
    // ],
    // "mounts": [
    // 	{
    // 		"source": "devcontainer-cargo-cache-${devcontainerId}",
    // 		"target": "/usr/local/cargo",
    // 		"type": "volume"
    // 	}
    // ]
    // Features to add to the dev container. More info: https://containers.dev/features.
    // "features": {},
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [],
    // Use 'postCreateCommand' to run commands after the container is created.
    "postCreateCommand": "cargo build",
    // Configure tool-specific properties.
    // "customizations": {},
    // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
    "remoteUser": "root"
}